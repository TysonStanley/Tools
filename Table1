# Uses mtcars data as example
# Format mtcar vars

mtcars$mpgbin <- as.factor(ifelse(mtcars$mpg > 20, ">20 mpg", "<=20 mpg"))
mtcars$carb <- as.character(mtcars$carb)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$gear <- as.factor(mtcars$gear)


Table1 <- function(DF,x,split,format){
  require(data.table)
  require(reshape2)
  require(plyr)
GetIt <- function(DF,x,split)
{
  DT <- data.table(DF)
  index <- DT[,x]
  DT$x <- DT[,x, with=FALSE]
  DT$split <- DT[,as.factor(split),with=FALSE]
  if(sapply(DT,class)[index]=="factor")
  {
    DT[,.N,by=list(x,split)][,perc := 100*round(N/sum(N),4),by=.(x)][,entry :=paste(N,"(",perc,"%)",sep="")]
  } else {
    if(sapply(DT,class)[index]=="numeric") {
      DT[,.(x=names(DT)[index], Mean=round(mean(x, na.rm=TRUE),2), SD = round(sd(x, na.rm=TRUE),2)), by=split][,entry :=paste(Mean,"(",SD,")",sep="")] 
    } else {
      print("D'Oh! List contains unsupported data type.")
    }
  }
}
  if (format=="long"){
    return(lapply(x,FUN=GetIt, DF=DF, split=split))
  } else {
  if (format=="wide"){
    return(ldply(lapply(lapply(x,FUN=GetIt, DF=DF, split=split), x ~ split, value.var="entry", FUN=dcast),data.frame))
  } else {
    print("D'Oh! Format argument invalid. Options are long and wide")
  }
}
}

Table1(mtcars, c(4,6,7,10,12),"cyl","wide")


